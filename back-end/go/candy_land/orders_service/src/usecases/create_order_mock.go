// Code generated by MockGen. DO NOT EDIT.
// Source: create_order.go

// Package usecases is a generated GoMock package.
package usecases

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCreateOrder is a mock of CreateOrder interface
type MockCreateOrder struct {
	ctrl     *gomock.Controller
	recorder *MockCreateOrderMockRecorder
}

// MockCreateOrderMockRecorder is the mock recorder for MockCreateOrder
type MockCreateOrderMockRecorder struct {
	mock *MockCreateOrder
}

// NewMockCreateOrder creates a new mock instance
func NewMockCreateOrder(ctrl *gomock.Controller) *MockCreateOrder {
	mock := &MockCreateOrder{ctrl: ctrl}
	mock.recorder = &MockCreateOrderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCreateOrder) EXPECT() *MockCreateOrderMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockCreateOrder) Create(userID, productID string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", userID, productID)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockCreateOrderMockRecorder) Create(userID, productID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCreateOrder)(nil).Create), userID, productID)
}
