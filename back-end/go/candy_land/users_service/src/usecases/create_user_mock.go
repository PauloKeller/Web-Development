// Code generated by MockGen. DO NOT EDIT.
// Source: create_user.go

// Package usecases is a generated GoMock package.
package usecases

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCreateUser is a mock of CreateUser interface
type MockCreateUser struct {
	ctrl     *gomock.Controller
	recorder *MockCreateUserMockRecorder
}

// MockCreateUserMockRecorder is the mock recorder for MockCreateUser
type MockCreateUserMockRecorder struct {
	mock *MockCreateUser
}

// NewMockCreateUser creates a new mock instance
func NewMockCreateUser(ctrl *gomock.Controller) *MockCreateUser {
	mock := &MockCreateUser{ctrl: ctrl}
	mock.recorder = &MockCreateUserMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCreateUser) EXPECT() *MockCreateUserMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockCreateUser) Create(firstName, lastName, username, email string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", firstName, lastName, username, email)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create
func (mr *MockCreateUserMockRecorder) Create(firstName, lastName, username, email interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCreateUser)(nil).Create), firstName, lastName, username, email)
}
